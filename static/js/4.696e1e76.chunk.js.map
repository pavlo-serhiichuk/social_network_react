{"version":3,"sources":["components/NavLinks/Dialogs/Message/Message.jsx","components/NavLinks/Dialogs/UserDialog/UserDialog.jsx","components/NavLinks/Dialogs/UserDialog/SendMessageForm.jsx","components/NavLinks/Dialogs/DialogsContainer.jsx","components/NavLinks/Dialogs/Dialogs.jsx"],"names":["Message","props","className","message","UserDialog","path","id","to","name","maxLength5","maxLengthCreator","SendMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","action","Field","type","placeholder","value","component","Textarea","validate","required","compose","connect","state","dialogsPage","dispatch","addMessage","newMessageText","withAuthRedirect","AllDialogs","dialogs","map","d","AllMessages","messages","m","isAuth","src","alt","values","text","dialogPage"],"mappings":"4MAWeA,G,YARC,SAACC,GACb,OACI,qBAAKC,UAAU,UAAf,SACKD,EAAME,Y,iBCOJC,EATI,SAACH,GAChB,IAAMI,EAAO,YAAcJ,EAAMK,GACjC,OACI,qBAAKJ,UAAU,cAAf,SACI,cAAC,IAAD,CAASK,GAAIF,EAAb,SAAoBJ,EAAMO,U,yCCHhCC,EAAaC,YAAiB,GAqBrBC,EAFcC,YAAU,CAACC,KAAM,eAAjBD,EAjBL,SAACX,GACrB,OACI,uBAAMa,SAAUb,EAAMc,aAAcC,OAAO,GAAGd,UAAU,cAAxD,UACI,cAACe,EAAA,EAAD,CAAOf,UAAU,aACVgB,KAAK,OACLC,YAAY,yBACZC,MAAO,GACPC,UAAWC,IACXC,SAAU,CAACC,IAAUf,GACrBD,KAAM,SAEb,wBAAQN,UAAU,wC,2BCDfuB,sBAAQC,aAVC,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAMC,gBAGI,SAACC,GACxB,MAAO,CACHC,WAAY,SAACC,GAAD,OAAoBF,EAASC,YAAWC,SAIQC,IAArDP,ECVA,SAAiBxB,GAC5B,IAAIgC,EAAahC,EAAM2B,YAAYM,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuB9B,GAAI8B,EAAE9B,GAAIE,KAAM4B,EAAE5B,MAAxB4B,EAAE9B,OACnE+B,EAAcpC,EAAM2B,YAAYU,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBpC,QAASoC,EAAEpC,SAAjBoC,EAAEjC,OAItE,OAAIL,EAAMuC,OAEN,sBAAKtC,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACK+B,IAEL,gCACI,sBAAK/B,UAAU,WAAf,UACI,8BACI,qBAAKA,UAAU,gBACVuC,IAAI,0GAA0GC,IAAI,OAExH,cAAC,EAAD,CAAsB5B,SAdnB,SAAA6B,GAAM,OAAI1C,EAAM6B,WAAWa,EAAOC,OAefC,WAAY5C,EAAM2B,iBAE9CS,QAfY,cAAC,IAAD,CAAU9B,GAAG","file":"static/js/4.696e1e76.chunk.js","sourcesContent":["import React from 'react'\nimport './Message.css'\n\nconst Message = (props) => {\n    return (\n        <div className='message'>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message","import React from 'react'\nimport './UserDialog.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst UserDialog = (props) => {\n    const path = '/dialogs/' + props.id;\n    return (\n        <div className=\"user-dialog\">\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n};\n\nexport default UserDialog","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\n\nconst maxLength5 = maxLengthCreator(5)\n\nconst SendMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} action=\"\" className=\"create-text\">\n            <Field className='enter-post'\n                   type=\"text\"\n                   placeholder='Share your thoughts...'\n                   value={\"\"}\n                   component={Textarea}\n                   validate={[required, maxLength5]}\n                   name={'text'}/>\n\n            <button className='share-post fas fa-paper-plane'>\n            </button>\n        </form>\n    )\n}\n\nconst SendMessageFormRedux = reduxForm({form: 'sendMessage'})(SendMessageForm)\n\nexport default SendMessageFormRedux","import './Dialogs.css'\nimport {addMessage} from \"../../../Redux/dialog_producer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from 'react-redux'\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => ({\n    dialogsPage: state.dialogsPage,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageText) => dispatch(addMessage(newMessageText))\n    }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)\n//\n// export default function DialogsContainer(props) {\n//     const addNewMessage = () => {\n//         props.store.dispatch(addMessage())\n//     }\n//\n//     let onNewMessageChange = (e) => {\n//         props.store.dispatch(updateMessage(e))\n//     }\n//\n//     return (\n//         <Dialogs updateMessage={onNewMessageChange} addMessage={addNewMessage} store={props.store}/>\n//     )\n// }\n","import React from 'react'\nimport './Dialogs.css'\nimport Message from './Message/Message'\nimport UserDialog from './UserDialog/UserDialog'\nimport {Redirect} from \"react-router-dom\";\nimport SendMessageFormRedux from \"./UserDialog/SendMessageForm\";\n\nexport default function Dialogs(props) {\n    let AllDialogs = props.dialogsPage.dialogs.map(d => <UserDialog key={d.id} id={d.id} name={d.name}/>)\n    let AllMessages = props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message}/>)\n\n    const addNewMessage = values => props.addMessage(values.text)\n\n    if(!props.isAuth) return <Redirect to=\"/login\" />\n    return (\n        <div className=\"dialogs\">\n            <div className=\"users-dialogs\">\n                {AllDialogs}\n            </div>\n            <div>\n                <div className=\"messages\">\n                    <div>\n                        <img className=\"little-avatar\"\n                             src=\"https://www.pngkey.com/png/detail/114-1149878_setting-user-avatar-in-specific-size-without-breaking.png\" alt=\"\"/>\n                    </div>\n                       <SendMessageFormRedux onSubmit={addNewMessage}\n                                             dialogPage={props.dialogsPage}/>\n                </div>\n                {AllMessages}\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}