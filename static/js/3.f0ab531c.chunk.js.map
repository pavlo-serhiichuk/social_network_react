{"version":3,"sources":["components/NavLinks/Profile/ProfileInfo/Status/ProfileStatus.jsx","components/NavLinks/Profile/ProfileInfo/ProfileInfo.jsx","components/NavLinks/Profile/MyPosts/MyPost/Post.jsx","components/NavLinks/Profile/MyPosts/SendPostForm.jsx","components/NavLinks/Profile/MyPosts/MyPosts.jsx","components/NavLinks/Profile/MyPosts/MyPostsContainer.jsx","components/NavLinks/Profile/Profile.jsx","components/NavLinks/Profile/ProfileContainer.jsx"],"names":["ProfileStatus","state","editMode","onActivate","setState","onDeactivate","props","updateStatus","status","onStatusChange","e","currentTarget","value","this","onClick","onChange","autoFocus","onBlur","React","Component","userBirthday","Date","toLocaleDateString","UserInfo","className","fullName","lookingForAJobDescription","href","contacts","vk","ProfileInfo","profile","src","alt","data","photos","large","avatar","city","birthday","aboutMe","Preloader","LikeButton","likes","addLikes","newCount","Post","info","maxLength10","maxLengthCreator","SendPostFormRedux","reduxForm","form","onSubmit","handleSubmit","action","Field","type","placeholder","component","Textarea","name","validate","required","window","MyPosts","memo","console","log","push","AllPosts","posts","map","post","id","values","addPost","text","MyPostsContainer","connect","profilePage","newPostText","dispatch","newPost","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getUserStatus","updateUserStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.f0ab531c.chunk.js","sourcesContent":["import React from 'react'\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false\n    }\n\n    onActivate = () => {\n        // debugger\n\n        this.setState({ //  accинхронная операция\n            editMode: true\n        })\n    }\n\n    onDeactivate = () => {\n        // debugger\n        this.setState({\n            editMode: false\n        })\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (e) => {\n        // debugger\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return <div>\n            {!this.state.editMode && <div>\n                <span onClick={this.onActivate}>{this.props.status}</span>\n            </div>}\n            {this.state.editMode && <div>\n                <input onChange={this.onStatusChange}\n                       autoFocus={true}\n                       onBlur={this.onDeactivate}\n                       value={this.state.status}/>\n            </div>}\n        </div>\n    }\n}\n\nexport default ProfileStatus","import React from 'react'\nimport './ProfileInfo.css'\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./Status/ProfileStatus\";\nimport avatar from '../../../../assets/images/user.png'\n\nlet userBirthday = new Date(1995, 11, 17).toLocaleDateString()\n\nconst UserInfo = (props) => {\n    // debugger\n    return (\n        <div>\n            <div className='user-name'>{props.fullName}</div>\n            <div className=\"user-info\">\n                <div className=\"info-field\">Status:</div>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n                <div className=\"info-field\">Job status:</div>\n                <div className=\"city\">{props.lookingForAJobDescription}</div>\n                <div className=\"info-field\">VK:</div>\n                <div className=\"city\"><a href={\"https://\" + props.contacts.vk}>{props.contacts.vk}</a></div>\n            </div>\n        </div>\n    )\n}\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className=\"profile-info\">\n            <div>\n                <img className=\"avatar\" src=\"../../../../assets/images/user.png\" alt=\"\"/>\n                <img className=\"avatar\" src={true&&props.profile.data.photos.large || avatar}/>\n            </div>\n            <UserInfo city=\"Nebraska\"\n                      contacts={props.profile.data.contacts}\n                      fullName={props.profile.data.fullName}\n                      lookingForAJobDescription={props.profile.data.lookingForAJobDescription}\n                      birthday={userBirthday}\n                      aboutMe={props.profile.data.aboutMe}\n                      status={props.status}\n                      updateStatus={props.updateStatus}\n            />\n        </div>\n    )\n}\n\nexport default ProfileInfo","import React from 'react'\nimport './Post.css'\n\nclass LikeButton extends React.Component {\n    state = {\n        likes: 0\n    }\n\n    addLikes = () => {\n        let newCount = this.state.likes + 1\n\n        if (newCount > 1) {\n            newCount = this.state.likes - 1\n        }\n        this.setState({\n            likes: newCount\n        })\n    }\n\n    render() {\n        return <div onClick={this.addLikes} className=\"likes\">Likes: {this.state.likes}</div>\n    }\n}\n\nexport default function Post(props) {\n    return (\n        <div className=\"post\">\n            <div>\n                <img className=\"little-avatar\"\n                     src=\"https://www.pngkey.com/png/detail/114-1149878_setting-user-avatar-in-specific-size-without-breaking.png\" alt=\"\"/>\n            </div>\n            <div>\n                John Johnson\n                <br/>\n                <div className=\"post-and-likes\">\n                    {props.info}\n                    <LikeButton/>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\nimport {Textarea} from '../../../common/FormsControls/FormsControls'\n\nconst maxLength10 = maxLengthCreator(12)\nconst SendPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} action=\"\" className=\"create-text\">\n            <Field className='enter-post'\n                   type=\"text\"\n                   placeholder='Share your thoughts...'\n                   value={''}\n                   component={Textarea}\n                   name={'text'}\n                   validate={[required, maxLength10]}/>\n            <button className='share-post fas fa-paper-plane'>\n            </button>\n        </form>\n    )\n}\n\nconst SendPostFormRedux = reduxForm({form: 'sendPost'})(SendPostForm)\n\nexport default SendPostFormRedux\n\n","import React from 'react'\nimport './MyPosts.css'\nimport Post from \"./MyPost/Post\";\nimport SendPostFormRedux from \"./SendPostForm\";\n\nwindow.props = []\n\nconst MyPosts = React.memo(props => {\n    console.log(\"rerender\")\n\n    window.props.push(props)\n    console.log(window.props)\n    const AllPosts = props.posts.map(post => <Post key={post.id} id={post.id} info={post.info}/>)\n\n    const onAddPost = (values) => props.addPost(values.text)\n    return (\n        <div>\n            <SendPostFormRedux onSubmit={onAddPost}\n            />\n            <div className=\"posts\">\n                {AllPosts}\n            </div>\n        </div>\n    )\n})\n\nexport default MyPosts","import {addPostActionCreator} from \"../../../../Redux/profile_reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from 'react-redux'\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPost) => {\n            // debugger\n            dispatch(addPostActionCreator(newPost))}\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer\n\n","import React from 'react'\nimport './Profile.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    // debugger\n    return (\n        <div className=\"profile\">\n            <ProfileInfo profile={props.profile}\n                        status={props.status}\n                         updateStatus={props.updateStatus}\n\n            />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react'\nimport './Profile.css'\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../../Redux/profile_reducer\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    //ProfileContainer создается единажды как классовая\n    // компонента, делая(грязную работу) запрос на сервер\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId){\n            userId = this.props.authorizedUserId\n            if(!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getUserStatus(userId)\n    }\n\n    render() {\n        // debugger\n        return (\n            <Profile {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateUserStatus}\n\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\n    withRouter,\n    withAuthRedirect)(ProfileContainer)\n\n// withRouter вощвращает новую компоненту,\n// которая отрисует ProfileContainer,\n// но в нее еще закинутся данные из url\n\n//оборачиваем ProfileContainer connect - ом,\n// который делает(грязную работу) запросы к стору и получая от него коллбеки.\n// Connect возвращает новую компоненту, которая отрисовывает ProfileContainer но данные закинет в нее из стора"],"sourceRoot":""}