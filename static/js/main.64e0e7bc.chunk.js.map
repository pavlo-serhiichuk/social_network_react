{"version":3,"sources":["assets/images/user.png","Redux/dialog_producer.js","components/common/common.module.css","api/api.js","reportWebVitals.js","components/Navigation/Navigation.jsx","components/NavLinks/Music/Music.jsx","components/NavLinks/Settings/Settings.jsx","utils/object-helpers.js","Redux/users_reducer.js","components/common/Paginator/Paginator.jsx","components/NavLinks/Users/User.jsx","components/NavLinks/Users/Users.jsx","Redux/users_selectors.js","components/NavLinks/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/auth_reducer.js","components/Header/HeaderContainer.jsx","components/NavLinks/Login/Login.jsx","Redux/app_reducer.js","App.jsx","Redux/sidebar_reducer.js","Redux/redux_store.js","index.jsx","components/Navigation/Navigation.module.css","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","assets/images/rolling.svg","components/common/Preloader/Preloader.jsx","components/common/Paginator/Paginator.module.css","hoc/withAuthRedirect.jsx","Redux/profile_reducer.js"],"names":["ADD_MESSAGE","initialState","dialogs","name","id","messages","message","addMessage","newMessageText","type","dialogReducer","state","action","body","Math","random","module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","postFollow","userId","post","deleteFollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuth","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","props","className","s","navigation","itemsContainer","to","activeClassName","active","Music","Settings","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROCESS","users","totalUsersCount","isFatching","followingInProcess","followSuccess","unfollowSuccess","toggleIsFatching","toggleFollowing","usersReducer","followed","count","filter","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","onPageChanged","portionSize","pagesCount","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","page","cn","selectedPage","pageNumber","User","user","unfollow","follow","src","photos","small","userPhoto","alt","disabled","some","Users","isAuth","getUsersList","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFatching","getFollowingInProcess","getIsAuth","auth","UsersContainer","componentDidMount","setCurrentPage","this","Preloader","React","Component","compose","connect","bind","totalCount","withAuthRedirect","Header","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","fieldCreator","required","Input","formSummeryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","withRouter","app","promise","Promise","all","myProfile","music","settings","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","textError","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLength","preloader","mapStateToPropsForRedirect","RedirectedComponent","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","posts","info","likeCount","newPostText","profile","addPostActionCreator","newPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus"],"mappings":"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","file":"static/js/main.64e0e7bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.be2959bf.png\";","const ADD_MESSAGE = 'ADD-MESSAGE'\nconst UPDATE_MESSAGE = 'UPDATE-MESSAGE'\n\nlet initialState = {\n    dialogs: [\n        {name: \"Alex\", id: 1},\n        {name: \"Oleg\", id: 2},\n        {name: \"Lo\", id: 3},\n        {name: \"Lena\", id: 4},\n        {name: \"Po\", id: 5},\n    ],\n    messages: [\n        {id: 1, message: 'Hi, there!'},\n        {id: 2, message: 'Hello, everyone!'},\n        {id: 3, message: 'Hi, guys!'},\n    ],\n};\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let body = action.message\n            return {\n                ...state,\n                messages: [...state.messages, {message: body, id: Math.random()}],\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport const addMessage = (newMessageText) => ({type: ADD_MESSAGE, message: newMessageText})\n\nexport default dialogReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"common_preloader__3gCNS\"};","import * as axios from \"axios\";\n\nlet instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"acbe659e-ab74-4691-a62b-b02b57afb23e\"\n    }\n})\n\nexport const userAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    postFollow(userId) {\n\n        return instance.post(`/follow/${userId}`, {})\n    },\n    deleteFollow(userId) {\n        return instance.delete(`/follow/${userId}`)\n    },\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put('profile/status', {status: status})\n    }\n}\n\nexport const authAPI = {\n    getAuth() {\n        return instance.get(`auth/me`)\n    },\n    login( email, password, rememberMe = false) {\n        return instance.post('auth/login', { email, password, rememberMe })\n    },\n    logout() {\n        return instance.delete('auth/login')\n    }\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport s from './Navigation.module.css'\nimport {NavLink, Router} from \"react-router-dom\";\n\nexport default function Navigation(props) {\n    return (\n        <nav className={s.navigation}>\n            <div className={s.itemsContainer}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>My profile </NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active}>My friends </NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialog</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active}>Sittings</NavLink>\n            </div>\n        </nav>\n    )\n\n}\n","import React from 'react'\nimport './Music.css'\n\nexport default function Music () {\n    return (\n        <div className=\"music\">\n            Music\n        </div>\n    )\n}","import React from 'react'\nimport './Settings.css'\n\nexport default function Settings () {\n    return (\n        <div className=\"settings\">\n            Settings\n        </div>\n    )\n}","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\n        return items.map(u => {\n            if(u[objPropName] === itemsId) {\n                return {...u, ...newObjProps } // возвращаем только копию.\n            }\n            return u\n        })\n}","import {userAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_FOLLOWING_PROCESS = 'TOGGLE_FOLLOWING_PROCESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 21,\n    currentPage: 2,\n    isFatching: false,\n    followingInProcess: []\n}\n\n// const completedState = (followedValue) => {\n//     return {\n//         ...state,\n//         users: state.users.map(u => {\n//             if (u.id === action.userId) {\n//                 return {...u, followed: followedValue} // возвращаем только копию.\n//             }\n//             return u\n//         })\n//     }\n// }\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n\n            // completedState(true)\n\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            }\n        }\n        case SET_USERS:\n            return {...state, users: action.users}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.count}\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFatching: action.isFatching}\n        case TOGGLE_FOLLOWING_PROCESS:\n            // debugger\n            return {\n                ...state,\n                followingInProcess:\n                    action.followingInProcess ? [...state.followingInProcess, action.userId]\n                        : state.followingInProcess.filter(id => id !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, count: totalCount})\nexport const toggleIsFatching = (isFatching) => ({type: TOGGLE_IS_FETCHING, isFatching})\nexport const toggleFollowing = (followingInProcess, userId) => ({\n    type: TOGGLE_FOLLOWING_PROCESS,\n    followingInProcess,\n    userId\n})\n\nexport default usersReducer\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    return async (dispatch) => {\n\n        dispatch(toggleFollowing(true, userId));\n        let response = await apiMethod(userId)\n        if (response.data.resultCode === 0) {\n            dispatch(actionCreator(userId))\n        }\n        dispatch(toggleFollowing(false, userId))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = userAPI.postFollow.bind(userId);\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess)\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = userAPI.deleteFollow.bind(userId);\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess)\n    }\n}\n//^ThunkCreator - работает с помощью замыкания\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n    //^Thunk\n    return async (dispatch) => {\n        dispatch(toggleIsFatching(false))\n        let data = await userAPI.getUsers(currentPage, pageSize);\n\n        dispatch(toggleIsFatching(true))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalCount(data.totalCount))\n    }\n}","import React, {useState} from 'react'\nimport '../../NavLinks/Users/User/User.css'\nimport s from './Paginator.module.css'\nimport cn from 'classnames'\n\nconst Paginator = ({currentPage, totalUsersCount, pageSize, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n    let pages = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n\n    return (\n        <div>\n            {portionNumber > 1 &&\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>{'<'}</button>}\n            {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map(page => <span key={Math.random()}\n                              // className={currentPage === page && s.selectedPage}\n                                   className={cn({[s.selectedPage]: currentPage === page}, s.pageNumber)}\n                              onClick={() => onPageChanged(page)}\n                >{page}</span>\n            )}\n            {portionCount > portionNumber &&\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{'>'}</button>}\n        </div>\n    )\n}\n\nexport default Paginator","import React from 'react'\nimport './User/User.css'\nimport userPhoto from '../../../assets/images/user.png'\nimport {NavLink} from \"react-router-dom\";\n\nconst User = ({user, followingInProcess, unfollow, follow}) => {\n    return (\n                    <div className=\"user\">\n                        <div className='follow'>\n                            <NavLink to={'/profile/' + user.id}>\n                                <img className=\"avatarInD\"\n                                     src={user.photos.small != null ? user.photos.small : userPhoto}\n                                     alt=\"\"/>\n                            </NavLink>\n                            <div>\n                                {user.followed\n                                    ? <button\n                                        disabled={followingInProcess.some(id => id === user.id)}\n                                        onClick={() => {unfollow(user.id)}}>Unfollow</button>\n                                    : <button\n                                        disabled={followingInProcess.some(id => id === user.id)}\n                                        onClick={() => {follow(user.id)}}>Follow</button>\n                                }\n                            </div>\n                        </div>\n                        <div>\n                            <div>{user.name}</div>\n                            <div>{user.status}</div>\n                        </div>\n                    </div>\n    )\n}\n\nexport default User","import React from 'react'\nimport './User/User.css'\nimport {Redirect} from \"react-router-dom\";\nimport Paginator from \"../../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nconst Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\n    return (\n        <div>\n            <Paginator currentPage={currentPage}\n                       totalUsersCount={totalUsersCount}\n                       pageSize={pageSize}\n                       onPageChanged={onPageChanged}/>\n            {props.users.map(user => {\n                if(!props.isAuth) return <Redirect to=\"/login\" />\n                return <User key={user.id}\n                             user={user}\n                             followingInProcess={props.followingInProcess}\n                             follow={props.follow} unfollow={props.unfollow}/>\n            })}</div>\n    )\n}\n\nexport default Users","//селекторы\n\nexport const getUsersList = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFatching = (state) => {\n    return  state.usersPage.isFatching\n}\n\nexport const getFollowingInProcess = (state) => {\n    return  state.usersPage.followingInProcess\n}\nexport const getIsAuth = (state) => {\n    return state.auth.isAuth\n}","import React from 'react';\nimport {\n    follow,\n    unfollow,\n    setCurrentPage,\n    getUsersThunkCreator\n} from \"../../../Redux/users_reducer\";\nimport {connect} from 'react-redux'\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProcess, getIsAuth,\n    getIsFatching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersList\n} from \"../../../Redux/users_selectors\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount = () => {\n        const {currentPage, pageSize} = this.props\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {setCurrentPage, getUsers, pageSize} = this.props\n        setCurrentPage(pageNumber)\n        getUsers(pageNumber, pageSize)\n    }\n\n    render() {\n        return <>\n            {!this.props.isFatching ? <Preloader/> : null}\n\n            <Users pageSize={this.props.pageSize}\n                   totalUsersCount={this.props.totalUsersCount}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onPageChanged={this.onPageChanged}\n                   followingInProcess={this.props.followingInProcess}\n                   toggleFollowing={this.props.toggleFollowing}\n                   isAuth={this.props.isAuth}\n\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: getUsersList(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFatching: getIsFatching(state),\n        followingInProcess: getFollowingInProcess(state),\n        isAuth: getIsAuth(state)\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage,\n        getUsers: getUsersThunkCreator\n    }),\n    withAuthRedirect)(UsersContainer)","import React from 'react'\nimport './Header.css'\nimport {NavLink} from \"react-router-dom\";\n\nexport default function Header(props) {\n    return (\n        <div className=\"header\">\n            <div className=\"header-content\">\n                <div className=\"title\">Spirits</div>\n                <div className=\"loginBlock\">\n                    {props.isAuth\n                        ? <div>{props.login} <button onClick={props.logout}>Log out</button> </div>\n                        : <NavLink to={'/login'}>Login</NavLink>}\n                </div>\n            </div>\n        </div>\n    )\n}","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state\n    }\n}\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, login, email, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.getAuth()\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, login, email, true))\n    }\n}\n// ^thunkCreator                            //^ thunk\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\n        dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\n\nexport default authReducer","import React from 'react'\nimport './Header.css'\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../Redux/auth_reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return (\n            <Header {...this.props} />\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\n\n// export default compose(connect(mapStateToProps, {getAuthUserData}),withAuthRedirect)(HeaderContainer)","import React from 'react'\nimport {reduxForm, Field} from \"redux-form\";\nimport {fieldCreator, Input} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../../Redux/auth_reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from '../../common/FormsControls/FormsControls.module.css'\nconst maxLength30 = maxLengthCreator(30)\n\nconst LoginWindow = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit} action=\"\">\n            {fieldCreator(\"Email\", 'email',  [required, maxLength30], Input)}\n            {fieldCreator(\"Password\", 'password',  [required, maxLength30], Input, \"password\")}\n            {fieldCreator(\"Password\", 'rememberMe',  [], Input, 'checkbox',  \"remember me\")}\n            {error && <div className={s.formSummeryError}>{error}</div>}\n            <button>Login</button>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginWindow)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if(props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return <div>\n        <h2>Login</h2>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login)\n","import {getAuthUserData} from \"./auth_reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state\n    }\n}\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n   let promise = dispatch(getAuthUserData())\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess())\n    })\n}\n\nexport default appReducer","import './App.css';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/NavLinks/Music/Music\";\nimport Settings from \"./components/NavLinks/Settings/Settings\";\nimport React from \"react\";\nimport UsersContainer from \"./components/NavLinks/Users/UsersContainer\";\n// import ProfileContainer from \"./components/NavLinks/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/NavLinks/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app_reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/NavLinks/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/NavLinks/Profile/ProfileContainer\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <HeaderContainer/>\n                <div className=\"wrapper_content\">\n                    <Navigation/>\n                    <div>\n                        <Route path=\"/profile/:userId?\" render={() => {\n                            return <React.Suspense fallback={() => <div>Loading...</div>}>\n                                <ProfileContainer/>\n                            </React.Suspense>\n                        }}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/dialogs\" render={() => {\n                            return <React.Suspense fallback={() => <div>Loading...</div>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        }}/>\n                        <Route path=\"/music\" render={() => <Music/>}/>\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\n                        <Route path=\"/login\" render={() => <Login/>}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n","\nlet initialState = {\n    myProfile: 'My profile',\n    dialogs: 'Dialogs',\n    music: 'Music',\n    settings: 'Settings',\n}\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state\n}\n\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile_reducer\";\nimport dialogReducer from \"./dialog_producer\";\nimport sidebarReducer from \"./sidebar_reducer\";\nimport usersReducer from \"./users_reducer\";\nimport authReducer from \"./auth_reducer\";\nimport appReducer from \"./app_reducer\";\nimport thunkMiddleWare from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    dialogsPage: dialogReducer,\n    sidebar: sidebarReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)))\n\nwindow.__store__ = store\n\nexport default store","import reportWebVitals from \"./reportWebVitals\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/redux_store'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\",\"itemsContainer\":\"Navigation_itemsContainer__1hamJ\",\"addEventContainer\":\"Navigation_addEventContainer__7U2OR\",\"addEvent\":\"Navigation_addEvent__1YPhH\",\"active\":\"Navigation_active__1Sofg\"};","import React from 'react'\nimport s from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validators/validators\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error\n    return (\n        <div className={hasError ? s.formControl : \"\"}>\n            <div className={s.error}>\n                {children}\n            </div>\n            {hasError && <span className={s.textError}>{error}</span>}\n        </div>\n    )\n}\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}\n\nexport const fieldCreator = (placeholder, name, validators, component, type = '', text = '') => {\n    return <div>\n            <Field\n                placeholder={placeholder}\n                name={name}\n                validate={validators}\n                component={component}\n                type={type}\n            />\n            {text}\n    </div>\n}\n//meta данные это данные о данных","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"textError\":\"FormsControls_textError__3Nckc\",\"formSummeryError\":\"FormsControls_formSummeryError__1QrDT\"};","export const required = value => {\n    if(value) return undefined\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = maxLength => value => {\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}","export default __webpack_public_path__ + \"static/media/rolling.c02004e4.svg\";","import React from 'react'\nimport preloader from \"../../../assets/images/rolling.svg\";\nimport s from '../common.module.css'\nconst Preloader = () => {\n    return (\n        <div><img className={s.preloader} src={preloader} alt=\"\"/></div>\n    )\n}\n\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\"};","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n\n\nconst withAuthRedirect = (Component) => { // HOC\n    class RedirectedComponent extends React.Component { //первая ContainerComponent\n        render() {\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\n            return <Component {...this.props} />\n        }\n    }\n\nlet connectedAuthRedirectedComponent = connect(mapStateToPropsForRedirect)(RedirectedComponent) //второя ContainerComponent\n    return connectedAuthRedirectedComponent\n}\n\nexport default withAuthRedirect","import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_STATUS = 'SET_USER_STATUS';\n\nlet initialState = {\n    posts: [\n        {id: 1, info: 'Hi! I\\'m not glad to use this platform', likeCount: 0},\n        {id: 2, info: 'What a beautiful day. Hello!', likeCount: 0},\n    ],\n    newPostText: '',\n    profile: null,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: Math.random(),\n                info: action.newPost,\n                likeCount: 0,\n            }\n\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_USER_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default:\n            return state\n    }\n}\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await profileAPI.getProfile(userId).then(response => {\n        dispatch(setUserProfile(response))\n    })\n}\n\nexport const getUserStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setUserStatus(response.data))\n}\n\nexport const updateUserStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n                if (response.data.resultCode === 0) {\n                    dispatch(setUserStatus(status))\n                }\n}\n\nexport default profileReducer"],"sourceRoot":""}